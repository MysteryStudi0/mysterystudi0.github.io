<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>HelloBoss招聘单页应用</title>
      <link href="/2022/05/08/fe-hello-boss/"/>
      <url>/2022/05/08/fe-hello-boss/</url>
      
        <content type="html"><![CDATA[<h1 id="描述"><a href="#描述" class="headerlink" title="描述"></a>描述</h1><p>实战 HelloBoss招聘小程序，实现求职者和招聘者两端，求职者可以编辑简历、筛选岗位进行面试；招聘者可以发布岗位、编辑岗位要求、筛选收到的简历。项目前端使用React 进行开发，后端采用SSM架构。</p><h1 id="技术栈"><a href="#技术栈" class="headerlink" title="技术栈"></a>技术栈</h1><ul><li>ReactNative</li><li>Spring Boot</li><li>Ant Design</li><li>MyBatis</li><li>SpringMVC</li></ul><h1 id="Demo演示"><a href="#Demo演示" class="headerlink" title="Demo演示"></a>Demo演示</h1>]]></content>
      
      
      <categories>
          
          <category> FeDemo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> SpringMVC </tag>
            
            <tag> SSM </tag>
            
            <tag> React </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>基于深度学习的旅游翻译助手APP</title>
      <link href="/2022/05/08/app-base-on-deep-learning-tourism-translation-assistant/"/>
      <url>/2022/05/08/app-base-on-deep-learning-tourism-translation-assistant/</url>
      
        <content type="html"><![CDATA[<h1 id="描述"><a href="#描述" class="headerlink" title="描述"></a>描述</h1><p>为解决广大游客出国旅游的语言问题，提供基础的文本翻译功能（中翻英和英翻中）、通过用户所在位置对旅游当地的食、住、行、购、玩提供相应推荐、提供基于图片的文字提取和 翻译功能，用户可以拍照、上传照片或者直接用摄像头取词进行翻译  </p><h1 id="技术栈"><a href="#技术栈" class="headerlink" title="技术栈"></a>技术栈</h1><ul><li>ButterKnife</li><li>RxKotlin</li><li>RxAndroid</li><li>RxLifecycle</li><li>Dagger2</li><li>ARouter</li><li>Gson</li><li>Glide</li><li>Okhttp</li><li>Retrofit</li><li>RxJava</li><li>Thinker</li><li>GreenDao</li></ul><h1 id="Demo-演示"><a href="#Demo-演示" class="headerlink" title="Demo 演示"></a>Demo 演示</h1>]]></content>
      
      
      <categories>
          
          <category> AppDemo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Android </tag>
            
            <tag> DeepLearning </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>商城手机APP</title>
      <link href="/2022/05/08/app-mail/"/>
      <url>/2022/05/08/app-mail/</url>
      
        <content type="html"><![CDATA[<h1 id="描述"><a href="#描述" class="headerlink" title="描述"></a>描述</h1><p>一个完整的电商APP，基于MVP架构，采用模块化的开发里面，实现了商品展示、购物车、支付、店家和顾客之间的IM通信、订单的管理  </p><h1 id="技术栈"><a href="#技术栈" class="headerlink" title="技术栈"></a>技术栈</h1><ul><li>ButterKnife</li><li>RxKotlin</li><li>RxAndroid</li><li>RxLifecycle</li><li>Dagger2</li><li>ARouter</li><li>Gson</li><li>Glide</li><li>TakePhoto</li><li>MultiStateView</li><li>Okhttp</li><li>Retrofit</li></ul><h1 id="Demo-演示"><a href="#Demo-演示" class="headerlink" title="Demo 演示"></a>Demo 演示</h1>]]></content>
      
      
      <categories>
          
          <category> AppDemo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Android </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>短视频App</title>
      <link href="/2022/05/08/app-short-video/"/>
      <url>/2022/05/08/app-short-video/</url>
      
        <content type="html"><![CDATA[<h1 id="描述"><a href="#描述" class="headerlink" title="描述"></a>描述</h1><p>一个短视频应用，基于MVVM架构，采用JetPack开发组件进行开发，用户可以发布短视频、发现附近好玩的短视频、关注、点赞自己喜欢的小程序。  </p><h1 id="技术栈"><a href="#技术栈" class="headerlink" title="技术栈"></a>技术栈</h1><ul><li>Navigation</li><li>Paging</li><li>LiveData</li><li>ViewModel</li><li>CameraX</li><li>Room</li><li>DataBinding</li><li>LifeCycles</li><li>WorkManager</li><li>ViewPager2</li><li>Okhttp</li><li>ExoPlayers</li><li>Retrofit</li></ul><h1 id="Demo-演示"><a href="#Demo-演示" class="headerlink" title="Demo 演示"></a>Demo 演示</h1>]]></content>
      
      
      <categories>
          
          <category> AppDemo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Android </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Go实现微服务电商系统</title>
      <link href="/2022/05/08/go-mxshop/"/>
      <url>/2022/05/08/go-mxshop/</url>
      
        <content type="html"><![CDATA[<h1 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h1><p>基于微服务架构开发电商系统和后台管理系统，使用<code>Go</code>语言完成微服务的架构和实现，系统包括完整的商品展示、购物车、订单、收货地址管理等。从0到1基于<code>grpc</code>逐步构建完整的电商系统。  </p><h1 id="技术栈"><a href="#技术栈" class="headerlink" title="技术栈"></a>技术栈</h1><ul><li>Go  </li><li>微服务架构  </li><li>分布式系统  </li><li>api网关  </li><li>服务治理  </li><li>链路追踪、熔断、限流</li></ul><h1 id="演示"><a href="#演示" class="headerlink" title="演示"></a>演示</h1><p>电商系统：<br><img src="/./go-mxshop/shop.png">  </p><p>电商后台管理系统：<br><img src="/./go-mxshop/admin-shangpin.png">  </p><p><img src="/./go-mxshop/admin-order.png">  </p><p><img src="/./go-mxshop/admin-user.png">  </p>]]></content>
      
      
      <categories>
          
          <category> GoDemo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Go </tag>
            
            <tag> 微服务 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Go实现租车微信小程序项目</title>
      <link href="/2022/05/08/go-coolcar/"/>
      <url>/2022/05/08/go-coolcar/</url>
      
        <content type="html"><![CDATA[<h1 id="描述"><a href="#描述" class="headerlink" title="描述"></a>描述</h1><p>实战共享出行-汽车分时租赁小程序。结合敏捷开发，领域驱动开发的理念，使用<code>TypeScript</code>进行小程序前端开发。后端采用<code>Go</code>微服务架构，使用<code>k8s+docker</code>在云端进行部署。  </p><h1 id="技术栈"><a href="#技术栈" class="headerlink" title="技术栈"></a>技术栈</h1><ul><li>Go  </li><li>TypeScript  </li><li>Kubernetes  </li><li>Docker  </li><li>微服务</li></ul><h1 id="demo演示"><a href="#demo演示" class="headerlink" title="demo演示"></a>demo演示</h1><p><img src="/./go-coolcar/demo.png">  </p>]]></content>
      
      
      <categories>
          
          <category> GoDemo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Go </tag>
            
            <tag> TypeScript </tag>
            
            <tag> Docker </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Go实现微服务网关</title>
      <link href="/2022/05/08/go-micro-service-gateway/"/>
      <url>/2022/05/08/go-micro-service-gateway/</url>
      
        <content type="html"><![CDATA[<h1 id="描述"><a href="#描述" class="headerlink" title="描述"></a>描述</h1><p>一个通用型前端+后端一体的微服务网关项目。  </p><h1 id="技术栈"><a href="#技术栈" class="headerlink" title="技术栈"></a>技术栈</h1><ul><li>用户登陆：基于Redis  </li><li>Vue后台管理系统：Vue-Element-Admin  </li><li>服务器:GO+gRPC+JWT  </li><li>数据库:MySQL+Redis</li></ul><h1 id="demo演示"><a href="#demo演示" class="headerlink" title="demo演示"></a>demo演示</h1><p><img src="/./go-micro-service-gateway/demo1.png">  </p><p><img src="/./go-micro-service-gateway/demo2.png">  </p><p><img src="/./go-micro-service-gateway/demo3.png">  </p>]]></content>
      
      
      <categories>
          
          <category> GoDemo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Go </tag>
            
            <tag> Vue </tag>
            
            <tag> GRPC </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Go实现电商网站高并发秒杀系统</title>
      <link href="/2022/05/05/go-e-commerce-high-concurrency-seconds-kill-system/"/>
      <url>/2022/05/05/go-e-commerce-high-concurrency-seconds-kill-system/</url>
      
        <content type="html"><![CDATA[<h1 id="描述"><a href="#描述" class="headerlink" title="描述"></a>描述</h1><ul><li>采用分布式权限验证设计  </li><li>采用Cookie验证的方式代替分布式Seesion  </li><li>免去繁琐的传统技术栈，采用架构设计降低系统整体复杂度</li></ul><p><img src="/./go-e-commerce-high-concurrency-seconds-kill-system/demo1.png">  </p><h1 id="技术栈"><a href="#技术栈" class="headerlink" title="技术栈"></a>技术栈</h1><ul><li>Go  </li><li>MySQL  </li><li>RabbitMQ  </li><li>Iris</li></ul><h1 id="演示"><a href="#演示" class="headerlink" title="演示"></a>演示</h1><p><img src="/./go-e-commerce-high-concurrency-seconds-kill-system/demo1.png">  </p>]]></content>
      
      
      <categories>
          
          <category> GoDemo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Go </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Go实现企业级抽奖系统</title>
      <link href="/2022/05/05/go-enterprise-lottery/"/>
      <url>/2022/05/05/go-enterprise-lottery/</url>
      
        <content type="html"><![CDATA[<h1 id="描述"><a href="#描述" class="headerlink" title="描述"></a>描述</h1><p>抽奖流程：抽奖 &gt; 验证登录 &gt; 用户抽奖锁定 &gt; 验证用户今日参与次数 &gt; 验证用户今日最大限制数 &gt; 验证<code>IP</code>今日抽奖次数 &gt; 验证<code>IP</code>黑名单 &gt; 验证用户黑名单 &gt; 获取抽奖编码 &gt; 匹配奖品 &gt; 验证奖品池库存 &gt; 发奖、更新奖品库存 &gt; 发放优惠劵 &gt; 中奖记录 &gt; 返回结果。  </p><h2 id="业务难点"><a href="#业务难点" class="headerlink" title="业务难点"></a>业务难点</h2><ul><li>1.抽奖的业务需求，既复杂又多变  </li><li>2.奖品类型和中奖概率设置  </li><li>3.如何公平的抽奖，安全的发奖</li></ul><h2 id="技术挑战"><a href="#技术挑战" class="headerlink" title="技术挑战"></a>技术挑战</h2><ul><li>1.网络并发编程，数据读写的并发安全性问题  </li><li>2.高效的抽奖和发奖，提高并发和性能  </li><li>3.系统优化，怎么把 Redis 更好的利用起来</li></ul><h1 id="技术栈"><a href="#技术栈" class="headerlink" title="技术栈"></a>技术栈</h1><ul><li>Go  </li><li>MySQL和xorm  </li><li>Iris框架  </li><li>MySQL数据库  </li><li>Redis数据库  </li><li>RPC框架</li></ul>]]></content>
      
      
      <categories>
          
          <category> GoDemo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Go </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Go实现容器微服务化的电商网站</title>
      <link href="/2022/05/05/go-container-microservice-e-commerce-website/"/>
      <url>/2022/05/05/go-container-microservice-e-commerce-website/</url>
      
        <content type="html"><![CDATA[<h1 id="描述"><a href="#描述" class="headerlink" title="描述"></a>描述</h1><p>对于真正微服务项目来说，服务开发只是第一步，容器化、弹性伸缩和可观测才是真正关键。本项目将通过电商系统实战，系统学习完全形态的微服务，掌握成熟闭环的落地方案。  </p><h1 id="技术栈"><a href="#技术栈" class="headerlink" title="技术栈"></a>技术栈</h1><ul><li>Go  </li><li>Docker容器  </li><li>微服务  </li><li>MySQL和ORM  </li><li>Prometheus监控</li></ul><h1 id="演示"><a href="#演示" class="headerlink" title="演示"></a>演示</h1><p><img src="/./go-container-microservice-e-commerce-website/demo1.png">  </p>]]></content>
      
      
      <categories>
          
          <category> GoDemo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Go </tag>
            
            <tag> C/C++ </tag>
            
            <tag> Python </tag>
            
            <tag> Java </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Go实现分布式任务调度系统</title>
      <link href="/2022/05/05/go-distributed-task-scheduling/"/>
      <url>/2022/05/05/go-distributed-task-scheduling/</url>
      
        <content type="html"><![CDATA[<h1 id="描述"><a href="#描述" class="headerlink" title="描述"></a>描述</h1><p>结合<code>Etcd</code>与<code>MongoDB</code>实现一个基于<code>Master-Worker</code>分布式架构的任务调度系统。  </p><p>项目架构图：  </p><p><img src="/./go-distributed-task-scheduling/jiagou.png">  </p><h1 id="技术栈"><a href="#技术栈" class="headerlink" title="技术栈"></a>技术栈</h1><ul><li>Go  </li><li>MongoDB分布式存储  </li><li>Etcd协调服务  </li><li>Shell任务执行  </li><li>Cron表达式调用</li></ul><h1 id="演示"><a href="#演示" class="headerlink" title="演示"></a>演示</h1><p><img src="/./go-distributed-task-scheduling/demo1.png">  </p>]]></content>
      
      
      <categories>
          
          <category> GoDemo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Go </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>SSM搭建简易人事管理系统</title>
      <link href="/2022/05/04/java-ssm-simple-person-manage-system/"/>
      <url>/2022/05/04/java-ssm-simple-person-manage-system/</url>
      
        <content type="html"><![CDATA[<h1 id="描述"><a href="#描述" class="headerlink" title="描述"></a>描述</h1><p>SSM（Spring + Spring MVC + MyBatis）框架是媲美于 SSH 框架的轻量级 Java EE 框架。easyUI 是一组基于 jQuery 的 UI 插件集合体，它的目标就是帮助 web 开发者更轻松的打造出功能丰富并且美观的 UI 界面。本项目将采用 SSM + easyUI 来开发一个比较简易的人事管理系统。  </p><h1 id="技术栈"><a href="#技术栈" class="headerlink" title="技术栈"></a>技术栈</h1><ul><li>JavaEE 分层结构  </li><li>MySQL 的基本操作  </li><li>Spring 框架基本使用  </li><li>Spring MVC 的基本使用  </li><li>MyBatis 框架基本使用  </li><li>Junit 单元测试  </li><li>拦截器</li></ul>]]></content>
      
      
      <categories>
          
          <category> JavaDemo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> SSM </tag>
            
            <tag> Java </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python实现推箱子游戏</title>
      <link href="/2022/05/04/python-game-sokoban/"/>
      <url>/2022/05/04/python-game-sokoban/</url>
      
        <content type="html"><![CDATA[<h1 id="演示"><a href="#演示" class="headerlink" title="演示"></a>演示</h1><p><img src="/python-game-sokoban/borgar.png">  </p>]]></content>
      
      
      <categories>
          
          <category> GameDemo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Pygame 实现贪吃蛇和俄罗斯方块游戏</title>
      <link href="/2022/05/04/python-game-snake-tetris/"/>
      <url>/2022/05/04/python-game-snake-tetris/</url>
      
        <content type="html"><![CDATA[]]></content>
      
      
      <categories>
          
          <category> GameDemo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>C语言实现五子棋游戏</title>
      <link href="/2022/05/04/c-gobang/"/>
      <url>/2022/05/04/c-gobang/</url>
      
        <content type="html"><![CDATA[<h1 id="描述"><a href="#描述" class="headerlink" title="描述"></a>描述</h1><p>实现一个五子棋游戏。  </p><h1 id="技术栈"><a href="#技术栈" class="headerlink" title="技术栈"></a>技术栈</h1><ul><li>游戏的逻辑  </li><li>判断结果的算法  </li><li>界面的设计</li></ul><h1 id="演示"><a href="#演示" class="headerlink" title="演示"></a>演示</h1><p><img src="/./c-gobang/wuziqi.png">  </p>]]></content>
      
      
      <categories>
          
          <category> CppDemo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C/C++ </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>C++操作Redis实现消息异步订阅和发布</title>
      <link href="/2022/05/04/cpp-op-redis-asynchronous-subscribe-publish/"/>
      <url>/2022/05/04/cpp-op-redis-asynchronous-subscribe-publish/</url>
      
        <content type="html"><![CDATA[<h1 id="描述"><a href="#描述" class="headerlink" title="描述"></a>描述</h1><p>操作 redis 实现异步订阅和发布。  </p><h2 id="技术栈"><a href="#技术栈" class="headerlink" title="技术栈"></a>技术栈</h2><ul><li><code>C++</code></li><li><code>Redis</code>基础知识  </li><li><code>Hiredis API</code></li></ul>]]></content>
      
      
      <categories>
          
          <category> CppDemo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C/C++ </tag>
            
            <tag> Redis </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>C++和OpenGL实现吃豆人游戏</title>
      <link href="/2022/05/04/cpp-opengl-pacman/"/>
      <url>/2022/05/04/cpp-opengl-pacman/</url>
      
        <content type="html"><![CDATA[<h1 id="描述"><a href="#描述" class="headerlink" title="描述"></a>描述</h1><p>通过<code>C++</code>和<code>OpenGL</code>库来实现了一个吃豆人的小游戏。  </p><p>该项目可以作为C++和图形学的课程设计题目。  </p><h1 id="技术栈"><a href="#技术栈" class="headerlink" title="技术栈"></a>技术栈</h1><ul><li>C++ 编程基础  </li><li>C++ 模板库使用  </li><li>OpenGL库使用  </li><li>图形图像</li></ul><h1 id="演示"><a href="#演示" class="headerlink" title="演示"></a>演示</h1><p><img src="/./cpp-opengl-pacman/play.png">  </p>]]></content>
      
      
      <categories>
          
          <category> CppDemo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C/C++ </tag>
            
            <tag> OpenGL </tag>
            
            <tag> 图形学 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>C++实现运动目标追踪</title>
      <link href="/2022/05/04/cpp-motion-target-tracking/"/>
      <url>/2022/05/04/cpp-motion-target-tracking/</url>
      
        <content type="html"><![CDATA[<h1 id="描述"><a href="#描述" class="headerlink" title="描述"></a>描述</h1><p>利用 OpenCV 来实现对视频中动态物体的追踪。  </p><h1 id="技术栈"><a href="#技术栈" class="headerlink" title="技术栈"></a>技术栈</h1><ul><li>C++  </li><li>OpenCV  </li><li>图像知识基础</li></ul><h1 id="演示"><a href="#演示" class="headerlink" title="演示"></a>演示</h1><p><img src="/cpp-motion-target-tracking/demo.jpeg">  </p>]]></content>
      
      
      <categories>
          
          <category> CppDemo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C/C++ </tag>
            
            <tag> OpenCV </tag>
            
            <tag> 图像处理 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>C++实现课程管理系统</title>
      <link href="/2022/05/04/cpp-course-manage-system/"/>
      <url>/2022/05/04/cpp-course-manage-system/</url>
      
        <content type="html"><![CDATA[<h1 id="描述"><a href="#描述" class="headerlink" title="描述"></a>描述</h1><p>实现一个课程管理系统，在这个过程中会介绍C++11的很多特性，同时可以熟悉Linux下的C++语言编译方法及简单的Makefile编写。  </p><h1 id="技术栈"><a href="#技术栈" class="headerlink" title="技术栈"></a>技术栈</h1><ul><li>C++语言基本语法；  </li><li>基本的Makefile；  </li><li>C++面向对象程序设计，类，虚函数，继承，重载；  </li><li>C++ 标准库；  </li><li>C++11 的一些用法，例如auto</li></ul>]]></content>
      
      
      <categories>
          
          <category> CppDemo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C/C++ </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>C++实现即时通信软件</title>
      <link href="/2022/05/04/cpp-imchatroom/"/>
      <url>/2022/05/04/cpp-imchatroom/</url>
      
        <content type="html"><![CDATA[<h1 id="描述"><a href="#描述" class="headerlink" title="描述"></a>描述</h1><p>一个具备服务端和客户端的即时通信聊天室，涉及网络编程，C++面向对象程序设计等知识。  </p><p><img src="/./cpp-imchatroom/csmodel.png"></p>]]></content>
      
      
      <categories>
          
          <category> CppDemo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C/C++ </tag>
            
            <tag> 网络 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>C语言实现LRU缓存</title>
      <link href="/2022/05/04/c-lru-cache/"/>
      <url>/2022/05/04/c-lru-cache/</url>
      
        <content type="html"><![CDATA[<h1 id="描述"><a href="#描述" class="headerlink" title="描述"></a>描述</h1><p>如何使用C语言实现LRU缓存，从中学习LRU缓存的基本概念、C语言相关编程技巧，双向链表的C语言实现以及哈希表的C语言实现。  </p>]]></content>
      
      
      <categories>
          
          <category> CppDemo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C/C++ </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>C语言实现Linux网络嗅探器</title>
      <link href="/2022/05/04/c-linux-sniffer/"/>
      <url>/2022/05/04/c-linux-sniffer/</url>
      
        <content type="html"><![CDATA[<h1 id="描述"><a href="#描述" class="headerlink" title="描述"></a>描述</h1><p>通过原生套接字的方式，监听所有本地主机收发的数据链路层帧结构，然后解析数据包的类型，并记录到日志文件。实现一个轻量级的网络嗅探器。  </p>]]></content>
      
      
      <categories>
          
          <category> CppDemo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C/C++ </tag>
            
            <tag> 网络 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Java基于Spring Cloud微服务架构设计实现广告系统</title>
      <link href="/2022/05/03/java-spring-cloud-advertisement-system/"/>
      <url>/2022/05/03/java-spring-cloud-advertisement-system/</url>
      
        <content type="html"><![CDATA[<h1 id="描述"><a href="#描述" class="headerlink" title="描述"></a>描述</h1><p>参考<a href="https://coding.imooc.com/class/310.html">https://coding.imooc.com/class/310.html</a></p><p>本项目将实现广告投放系统与广告检索系统。  </p><p>SpringCloud＋Kafka＋MySQL实现微服务架构下的广告系统<br><img src="/java-spring-cloud-advertisement-system/arch.png">  </p>]]></content>
      
      
      <categories>
          
          <category> JavaDemo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Java实现电商网站服务端</title>
      <link href="/2022/05/03/java-enterprise-e-commerce-website-server/"/>
      <url>/2022/05/03/java-enterprise-e-commerce-website-server/</url>
      
        <content type="html"><![CDATA[<h1 id="描述"><a href="#描述" class="headerlink" title="描述"></a>描述</h1><p>参考<a href="https://coding.imooc.com/class/96.html">https://coding.imooc.com/class/96.html</a>  </p><h1 id="技术栈"><a href="#技术栈" class="headerlink" title="技术栈"></a>技术栈</h1><ul><li>数据库：mysql-server-5.1.73  </li><li>vsftpd：vsftpd-2.2.2-21.el6.x86_64  </li><li>核心技术栈：SSM&#x2F;Guava&#x2F;Jackson&#x2F;Joda&#x2F;注解  </li><li>jdk：7u80 64位  </li><li>Maven：3.0.5  </li><li>Nginx：nginx-1.10.2.tar.gz  </li><li>开发语言：Java  </li><li>SSM：spring+springmvc:4.0mybatis3.4</li></ul>]]></content>
      
      
      <categories>
          
          <category> JavaDemo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Java开发企业级权限管理系统</title>
      <link href="/2022/05/03/java-enterprise-privilege-manage-system/"/>
      <url>/2022/05/03/java-enterprise-privilege-manage-system/</url>
      
        <content type="html"><![CDATA[<h1 id="描述"><a href="#描述" class="headerlink" title="描述"></a>描述</h1><p>运用Java技术栈，打造一套基于最流行的RBAC拓展模型的，分布式的，有界面的，高灵活性，高拓展性的企业级权限管理系统。该项目可以应对绝大多数企业开发中与权限管理及后台系统相关的需求。  </p><h1 id="技术栈"><a href="#技术栈" class="headerlink" title="技术栈"></a>技术栈</h1><ul><li>权限框架：Spring Security &#x2F; Apache Shiro  </li><li>项目框架：Spring Boot&#x2F;Spring MVC&#x2F;Mybatis&#x2F;Redis  </li><li>基础工具：Maven&#x2F;Tomcat&#x2F;MySQL&#x2F;JDK1.8  </li><li>前端技术：jQuery&#x2F;Bootstrap&#x2F;Mustache&#x2F;zTree&#x2F;Duallistbox  </li><li>其他技术：Java高级技术&#x2F;Guava&#x2F;Druid&#x2F; Jackson</li></ul><h1 id="演示"><a href="#演示" class="headerlink" title="演示"></a>演示</h1>]]></content>
      
      
      <categories>
          
          <category> JavaDemo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Java基于Spring Boot实现前后端分离的wiki知识库系统</title>
      <link href="/2022/05/03/java-spring-boot-wiki-knowledge-base-system/"/>
      <url>/2022/05/03/java-spring-boot-wiki-knowledge-base-system/</url>
      
        <content type="html"><![CDATA[<h1 id="描述"><a href="#描述" class="headerlink" title="描述"></a>描述</h1><p>涉及的功能有：  </p><ul><li>富文本框wangEditor  </li><li>用户登录和管理  </li><li>登录校验  </li><li>文档阅读数、点赞数  </li><li>定时任务  </li><li>知识库  </li><li>WebSocket网站通知  </li><li>增加数据统计  </li><li>ECharts完成相关报表展示</li></ul><h1 id="技术栈"><a href="#技术栈" class="headerlink" title="技术栈"></a>技术栈</h1><ul><li>Java  </li><li>SpringBoot  </li><li>Vue</li></ul><h1 id="演示"><a href="#演示" class="headerlink" title="演示"></a>演示</h1>]]></content>
      
      
      <categories>
          
          <category> JavaDemo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
            <tag> Vue </tag>
            
            <tag> Spring Boot </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python基于Django实现旅游网站</title>
      <link href="/2022/05/03/python-django-tour-website/"/>
      <url>/2022/05/03/python-django-tour-website/</url>
      
        <content type="html"><![CDATA[<h1 id="描述"><a href="#描述" class="headerlink" title="描述"></a>描述</h1><h1 id="技术栈"><a href="#技术栈" class="headerlink" title="技术栈"></a>技术栈</h1><ul><li>Python  </li><li>Django  </li><li>微信小程序</li></ul><h1 id="demo演示"><a href="#demo演示" class="headerlink" title="demo演示"></a>demo演示</h1><p><img src="/./python-django-tour-website/demo1.png">  </p><p><img src="/./python-django-tour-website/demo2.png">  </p><p><img src="/./python-django-tour-website/demo3.png">  </p>]]></content>
      
      
      <categories>
          
          <category> PythonDemo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
            <tag> Vue </tag>
            
            <tag> Django </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python基于Flask框架实现在线问答系统</title>
      <link href="/2022/05/03/python-flask-online-qa-system/"/>
      <url>/2022/05/03/python-flask-online-qa-system/</url>
      
        <content type="html"><![CDATA[<h1 id="描述"><a href="#描述" class="headerlink" title="描述"></a>描述</h1><h1 id="技术栈"><a href="#技术栈" class="headerlink" title="技术栈"></a>技术栈</h1><ul><li>Python  </li><li>Flask</li></ul><h1 id="demo演示"><a href="#demo演示" class="headerlink" title="demo演示"></a>demo演示</h1><p><img src="/./python-flask-online-qa-system/demo1.png">  </p><p><img src="/./python-flask-online-qa-system/demo2.png">  </p>]]></content>
      
      
      <categories>
          
          <category> PythonDemo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
            <tag> MySQL </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python实现学生信息管理系统</title>
      <link href="/2022/05/03/python-student-info-manage-system/"/>
      <url>/2022/05/03/python-student-info-manage-system/</url>
      
        <content type="html"><![CDATA[]]></content>
      
      
      <categories>
          
          <category> PythonDemo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python实现新闻管理系统</title>
      <link href="/2022/05/03/python-news-manage-system/"/>
      <url>/2022/05/03/python-news-manage-system/</url>
      
        <content type="html"><![CDATA[]]></content>
      
      
      <categories>
          
          <category> PythonDemo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Shell实现Linux系统监控</title>
      <link href="/2022/05/03/shell-linux-system-monitor/"/>
      <url>/2022/05/03/shell-linux-system-monitor/</url>
      
        <content type="html"><![CDATA[<h1 id="描述"><a href="#描述" class="headerlink" title="描述"></a>描述</h1><p>实现一个包含各种不同参数的 Shell 脚本，用来获取和监控 Linux 系统信息，并将该脚本加入系统环境中。  </p><h1 id="技术栈"><a href="#技术栈" class="headerlink" title="技术栈"></a>技术栈</h1><ul><li><code>Bash</code>脚本编程  </li><li>如何获取<code>Linux</code>系统信息  </li><li>如何实时获取<code>Linux</code>资源使用率</li></ul><h1 id="演示"><a href="#演示" class="headerlink" title="演示"></a>演示</h1><p>运行<code>bash monitor.sh</code>，输出  </p><pre class=" language-sh"><code class="language-sh">Internet:  ConnectedOperating System Type :  GNU/LinuxOS Version :  Linux Debian buster/sid ( 4.18.0-25-generic x86_64)Architecture :  x86_64Kernel Release :  4.18.0-25-genericHostname :  zoctopusInternal IP :  192.168.1.6 172.17.0.1 2409:8a62:375:d840:15b0:bc83:bf7e:32ab 2409:8a62:375:d840:ad69:558f:aac8:7cc4External IP :  112.45.96.57Name Servers :  This internal configured Run currently Third symlink replace See operation 127.0.0.53 edns0Logged In users : zoctopus :0           2019-07-09 21:08 (:0)Ram Usages :               total        used        free      shared  buff/cache   availableMem:           3.7G        1.6G        233M        244M        1.9G        1.7GSwap Usages :               total        used        free      shared  buff/cache   availableSwap:          2.0G        1.0G        989MDisk Usages : Filesystem      Size  Used Avail Use% Mounted on/dev/sda2       228G   22G  195G  10% //dev/sda1       511M  6.1M  505M   2% /boot/efi/dev/sdb4       7.5G  2.4G  5.1G  32% /media/zoctopus/Ubuntu 18.0Load Average :  loadaverage:0.52,System Uptime Days/(HH:MM) :  6 days</code></pre>]]></content>
      
      
      <categories>
          
          <category> ShellDemo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Shell </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Shell实现打字游戏</title>
      <link href="/2022/05/03/shell-typing-game/"/>
      <url>/2022/05/03/shell-typing-game/</url>
      
        <content type="html"><![CDATA[<h1 id="描述"><a href="#描述" class="headerlink" title="描述"></a>描述</h1><p>在屏幕上显现一些字符或单词，然后你输入相应的字符或单词，如果输入正确的话，屏幕上的单词就会消失，并会出现一个新的词，以此来使计算机初学者熟悉键盘操作和练习打字。  </p><h1 id="技术栈"><a href="#技术栈" class="headerlink" title="技术栈"></a>技术栈</h1><ul><li>shell 程序设计与编写  </li><li>shell 数组字符串操作  </li><li>shell 基本语法  </li><li>linux 常见命令用法</li></ul><h1 id="演示"><a href="#演示" class="headerlink" title="演示"></a>演示</h1>]]></content>
      
      
      <categories>
          
          <category> ShellDemo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Shell </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>2048游戏</title>
      <link href="/2022/05/03/2048-game/"/>
      <url>/2022/05/03/2048-game/</url>
      
        <content type="html"><![CDATA[<h1 id="描述"><a href="#描述" class="headerlink" title="描述"></a>描述</h1><p>仿写2048游戏。  </p><h1 id="演示"><a href="#演示" class="headerlink" title="演示"></a>演示</h1>]]></content>
      
      
      <categories>
          
          <category> GameDemo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Go </tag>
            
            <tag> C/C++ </tag>
            
            <tag> Python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>C++实现线程池</title>
      <link href="/2022/05/03/cpp-thread-pool/"/>
      <url>/2022/05/03/cpp-thread-pool/</url>
      
        <content type="html"><![CDATA[]]></content>
      
      
      <categories>
          
          <category> CppDemo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C/C++ </tag>
            
            <tag> 线程 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>基于C++和OpenGL实现太阳系行星系统</title>
      <link href="/2022/05/03/cpp-opengl-solar-system/"/>
      <url>/2022/05/03/cpp-opengl-solar-system/</url>
      
        <content type="html"><![CDATA[<h1 id="描述"><a href="#描述" class="headerlink" title="描述"></a>描述</h1><p>基于C++和OpenGL实现太阳系行星系统。  </p><p>该demo可以作为C++和图形学的课程设计。  </p><h1 id="技术栈"><a href="#技术栈" class="headerlink" title="技术栈"></a>技术栈</h1><ul><li>C++  </li><li>OpenGL  </li><li>图形图像</li></ul>]]></content>
      
      
      <categories>
          
          <category> CppDemo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C/C++ </tag>
            
            <tag> OpenGL </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>C++实现智能指针</title>
      <link href="/2022/05/03/cpp-smart-pointer/"/>
      <url>/2022/05/03/cpp-smart-pointer/</url>
      
        <content type="html"><![CDATA[]]></content>
      
      
      <categories>
          
          <category> CppDemo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C/C++ </tag>
            
            <tag> 指针 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>C++实现基数树</title>
      <link href="/2022/05/03/cpp-radix-tree/"/>
      <url>/2022/05/03/cpp-radix-tree/</url>
      
        <content type="html"><![CDATA[]]></content>
      
      
      <categories>
          
          <category> CppDemo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C/C++ </tag>
            
            <tag> 基数树 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>C++实现红黑树</title>
      <link href="/2022/05/03/cpp-red-black-tree/"/>
      <url>/2022/05/03/cpp-red-black-tree/</url>
      
        <content type="html"><![CDATA[<h1 id="红黑树"><a href="#红黑树" class="headerlink" title="红黑树"></a>红黑树</h1><p>红黑树是一类特殊的二叉搜索树，其中每个结点被染成红色或黑色。若将二叉搜索树结点中的空指针看作是指向一个空结点，则称这类空结点为二叉搜索树的前端结点。并规定所有前端结点的高度为-1。  </p>]]></content>
      
      
      <categories>
          
          <category> CppDemo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C/C++ </tag>
            
            <tag> 红黑树 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>C++实现一个迷宫游戏</title>
      <link href="/2022/05/03/cpp-simple-maze/"/>
      <url>/2022/05/03/cpp-simple-maze/</url>
      
        <content type="html"><![CDATA[]]></content>
      
      
      <categories>
          
          <category> GameDemo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C/C++ </tag>
            
            <tag> BFS </tag>
            
            <tag> 广度优先遍历算法 </tag>
            
            <tag> 链表 </tag>
            
            <tag> 终端字符处理 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Go语言实现即时多人在线聊天室</title>
      <link href="/2022/05/03/go-imchat/"/>
      <url>/2022/05/03/go-imchat/</url>
      
        <content type="html"><![CDATA[<h1 id="项目描述"><a href="#项目描述" class="headerlink" title="项目描述"></a>项目描述</h1><p>使用Go语言实现可以满足  </p><ul><li>发送&#x2F;接收  </li><li>群聊  </li><li>高并发</li></ul><p>的多人在线聊天室。  </p><h1 id="技术栈"><a href="#技术栈" class="headerlink" title="技术栈"></a>技术栈</h1><ul><li>Go  </li><li>MySQL数据库  </li><li>WebSocket协议</li></ul><h1 id="演示"><a href="#演示" class="headerlink" title="演示"></a>演示</h1><p><img src="/go-imchat/demo1.png">  </p>]]></content>
      
      
      <categories>
          
          <category> GoDemo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Go </tag>
            
            <tag> Frontend </tag>
            
            <tag> Websocket </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Go语言实现在线读书社区网站</title>
      <link href="/2022/05/03/go-book-community/"/>
      <url>/2022/05/03/go-book-community/</url>
      
        <content type="html"><![CDATA[<h1 id="项目描述"><a href="#项目描述" class="headerlink" title="项目描述"></a>项目描述</h1><p>使用Go语言及Beego框架进行项目开发，快速迭代上线，然后进行包括主从和分表分库、搜索优化、页面静态化、动态缓存、下载优化、服务负载均衡等一系列架构优化，最后实现Web应用的高可用&amp;高并发。  </p><h1 id="技术栈"><a href="#技术栈" class="headerlink" title="技术栈"></a>技术栈</h1><ul><li>Go  </li><li>Beego框架  </li><li>MySQL数据库和ORM  </li><li>前端</li></ul><h1 id="demo演示"><a href="#demo演示" class="headerlink" title="demo演示"></a>demo演示</h1><p>登录：<br><img src="/_posts/go-book-community/login.png">  </p><p><code>Admin</code>账户：<br><img src="/go-book-community/admin.png">  </p><p><img src="/_posts/go-book-community/demo.png">  </p>]]></content>
      
      
      <categories>
          
          <category> GoDemo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Go </tag>
            
            <tag> Beego </tag>
            
            <tag> Web </tag>
            
            <tag> Frontend </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>GO语言仿写优酷视频网站</title>
      <link href="/2022/05/03/go-myouku/"/>
      <url>/2022/05/03/go-myouku/</url>
      
        <content type="html"><![CDATA[<h1 id="项目描述"><a href="#项目描述" class="headerlink" title="项目描述"></a>项目描述</h1><p>使用<code>Go</code>语言仿写优酷网视频网站</p><h1 id="技术栈"><a href="#技术栈" class="headerlink" title="技术栈"></a>技术栈</h1><ul><li>Go语言  </li><li>MySQL数据库  </li><li>Redis数据库  </li><li>RabbitMQ消息队列   </li><li>Elasticsearch搜索数据库</li></ul><h1 id="demo演示"><a href="#demo演示" class="headerlink" title="demo演示"></a>demo演示</h1><p><img src="/go-myouku/demo1.png">  </p><p><img src="/go-myouku/demo2.png">  </p>]]></content>
      
      
      <categories>
          
          <category> GoDemo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Go </tag>
            
            <tag> Web </tag>
            
            <tag> Frontend </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Go实现内容管理平台</title>
      <link href="/2022/05/03/go-xcms/"/>
      <url>/2022/05/03/go-xcms/</url>
      
        <content type="html"><![CDATA[<h1 id="描述"><a href="#描述" class="headerlink" title="描述"></a>描述</h1><h1 id="技术栈"><a href="#技术栈" class="headerlink" title="技术栈"></a>技术栈</h1><ul><li>Go  </li><li>MySQL数据库  </li><li>Beego框架</li></ul><h1 id="演示"><a href="#演示" class="headerlink" title="演示"></a>演示</h1>]]></content>
      
      
      <categories>
          
          <category> GoDemo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Go </tag>
            
            <tag> Beego </tag>
            
            <tag> Web </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Go语言实现婚恋网站爬虫</title>
      <link href="/2022/05/03/go-dating-website-crawler/"/>
      <url>/2022/05/03/go-dating-website-crawler/</url>
      
        <content type="html"><![CDATA[]]></content>
      
      
      <categories>
          
          <category> CrawlerDemo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Go </tag>
            
            <tag> 爬虫 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
